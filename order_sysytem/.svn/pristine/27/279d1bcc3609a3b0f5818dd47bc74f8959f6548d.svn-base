<template>
  <div>
    <transition name="fade">
      <div class="xu_banner" v-if="xuShow" @click="colseBanner">
        <div class="xu_content" :style="{'width':width,'margin-top':marginTop,'min-height':height}">
          <slot/>
          <div class="close" @click="onClickClose">&times;</div>
        </div>
      </div>
    </transition>
  </div>
  
</template>

<script>
export default {
  data() {
    return {
      xuShow: false,
    }
  },
  props:{
    marginTop:{
      type: String,
      default:'110px',
    },
    showDialog:{
      type: Boolean,
      default: true
    },
    width: {
      type: String,
      default: '700px'
    },
    height:{
      type: String,
      default: '150px'
    }
  },
  methods: {
    closeDialog() {
      this.xuShow = false
    },
    close () {
      // this.$el.remove()
      this.$emit('close')
      // this.$destroy()
    },
    onClickClose () {
      this.close()
      // if (this.closeButton && typeof this.closeButton.callback === 'function') {
      //   this.closeButton.callback(this)//this === toast实例
      // }
    },
    colseBanner(){
      if(event.target.className == 'xu_banner'){
        this.close()
      }
    }
  },
  watch:{
    showDialog(val) {
      this.xuShow = val
    }
  },
  mounted(){
    this.xuShow = this.showDialog?true:false
  }
}
</script>

<style lang="scss" scoped>
  .xu_banner {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2000;
    background-color:rgba(0, 0, 0, 0.2);
    .xu_content {
      position: relative;
      background-color: #fff;
      margin-left: auto;
      margin-right: auto;
      border-radius: 4px;
      .close {
        background-color: rgba(0, 0, 0, 0.5);
        position: absolute;
        top: -15px;
        right: -15px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        font-size: 25px;
        text-align: center;
        line-height: 30px;
        color: #ddd;
        cursor: pointer;
        transition: All 0.6s ease-in-out;
      }
      .close:hover {
        transform: rotate(360deg);
      }

      
    }
  }
  .fade-enter-active, .fade-leave-active {
      transition: opacity 0.8s ease;
    }
    .fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {
      opacity: 0;
    }
</style>
